#pragma once
#include <vector>
#include "task.h"
#include "repository.h"
#include "service.h"
#include <cassert>

//Task tests
void task__no_parameters__task_created();
void get_title__valid_input__task_passed();
void get_type__valid_input__task_passed();
void get_last_performed_day__valid_input__task_passed();
void get_last_performed_month__valid_input__task_passed();
void get_last_performed_year__valid_input__task_passed();
void get_vision__valid_input__task_passed();
void get_times_performed__valid_input__task_passed();
void to_string__valid_input__return_data_as_string_one_digit_month_day();
void to_string__valid_input__return_data_as_string_two_digits_month_day();
void set_last_performed_day__valid_input__last_performed_day_updated();
void set_last_performed_month__valid_input__last_performed_month_updated();
void set_last_performed_year__valid_input__last_performed_year_updated();
void set_title__valid_input__title_updated();
void set_type__valid_input__type_updated();
void set_times_performed__valid_input__time_performed_updated();
void set_vision__valid_input__vision_updated();
void task_initialized__valid_input__task_initialized();
void operatorequal__valid_input__task_not_equal();
void test_task();

//Repository tests
void add_file_data__valid_input__task_added();
void add_to_servant_list__valid_input__task_saved();
void remove_file_data__valid_input__task_removed();
void get_number_of_tasks__valid_input__number_of_task_returned();
void get_number_of_saved_tasks__valid_input__number_of_saved_tasks_returned();
void search_task_title__valid_input__task_found();
void search_task_title__valid_input__task_not_found();
void update_file_data__valid_input__task_updated();
void update_file_data__valid_input__title_updated();
void update_file_data__valid_input__type_updated();
void update_file_data__valid_input__last_performed_day_updated();
void update_file_data__valid_input__last_performed_month_updated();
void update_file_data__valid_input__last_performed_year_updated();
void update_file_data__valid_input__times_performed_updated();
void update_file_data__valid_input__vision_updated();
void task_duplicate__valid_title__task_found();
void get_task__valid_input__task_passed();
void task_duplicate__invalid_title__task_not_found();
void get_list_of_tasks__valid_input__list_of_task_returned();
void set_filepath__valid_input__filepath_set();
void set_filepath__valid_input__filepath_not_set();
void test_repository();

//Service tests
void set_mode__char_A__mode_true();
void set_mode__char_not_AB__mode_false();
void set_mode__char_B__mode_true();
void add__mode_not_A__task_added();
void add__mode_not_A__task_not_added();
void add__task_not_duplicate__task_not_added();
void update__mode_not_a__returned_0();
void update__task_not_found__returned_0();
void update__task_found_mode_A__task_updated();
void remove__task_not_found__returned_0();
void remove__mode_not_A__returned_0();
void current_task__invalid_input__return_empty_task();
void next__valid_input__next_task_returned();
void next__valid_input__first_task_returned();
void current_task__valid_input__return_current_saved_task();
void get_filepath__valid_input__filepath_returned();
void get_list_of_saved_tasks__valid_input__list_of_saved_tasks_returned();
void add_to_servant_list__mode_NOT_B__task_not_added();
void test_service();

void all_tests();
